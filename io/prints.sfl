use std::String;
use std::Displayable;
use std::io::File;
use std::errors::FileWriteError;

throws FileWriteError, AllocationError
fun print(str: String...) {
    for (x in str) {
        File::STDOUT.write(x) catch!;
    }
}

throws FileWriteError, AllocationError
fun println(str: String...) {
    for (x in str) {
        File::STDOUT.write(x) catch!;
    }
    File::STDOUT.write('\n') catch!;
}

throws FileWriteError, AllocationError
fun print(dis: Displayable...) {
    for (x in dis) {
        x.toString(File::STDOUT) catch!;
    }
}

throws FileWriteError, AllocationError
fun println(dis: Displayable...) {
    for (x in dis) {
        x.toString(File::STDOUT) catch!;
    }
    File::STDERR.write('\n') catch!;
}

fun eprint(str: String...) {
    do {
        for (x in str) {
            File::STDERR.write(x) catch!;
        }
    } catch ~;
}

fun eprintln(str: String...) {
    do {
        for (x in str) {
            File::STDERR.write(x) catch!;
        }
        File::STDERR.write('\n') catch!;
    } catch ~;
}

fun eprint(dis: Displayable...) {
    do {
        for (x in dis) {
            x.toString(File::STDERR) catch!;
        }
    } catch ~;
}

fun eprintln(dis: Displayable...) {
    do {
        for (x in dis) {
            x.toString(File::STDERR) catch!;
        }
        File::STDERR.write('\n') catch!;
    } catch ~;
}